{"version":3,"sources":["components/customPlot/index.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["CustomPlot","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","layout","title","autosize","datarevision","data","x","y","type","mode","marker","color","nextProps","time","data1","data2","newData","toConsumableArray","newLayout","assign","setState","_this$state","displayModeBar","react_default","a","createElement","react_plotly_default","config","useResizeHandler","style","width","height","Component","defaultProps","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","defaultState","total","isRunning","speedSliderValue","App","tick","newRandomPoint","getNewRandomPoint","newData1","newData2","newTime","push","length","handleToolSwitch","handlePlayPause","_this$state2","clearInterval","interval","setInterval","calculateSpeed","handleSpeedSliderChange","event","value","refresh","_this2","_this$state3","tailCounter","i","Math","floor","random","_this$state4","classes","core_styles","Theme","Paper_default","className","intro","elevation","Typography_default","variant","component","plot","customPlot","settingsPanel","controlPanel","IconButton_default","onClick","Pause_default","PlayArrow_default","Refresh_default","advancedControlPanel","row","marginRight","Slider_default","onChange","Switch_default","checked","withStyles","objectSpread","mixins","gutters","margin","spacing","unit","padding","display","flexDirection","justifyContent","alignItems","marginBottom","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0128e85b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\n\nclass CustomPlot extends Component {\n  static defaultProps = {\n    title: '',\n    time: [],\n    data1: [],\n    data2: [],\n    displayModeBar: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      layout: {\n        title: '',\n        autosize: true,\n        datarevision: 0,\n      },\n      data: [\n        {\n          x: [],\n          y: [],\n          type: 'scatter',\n          mode: 'lines+points',\n          marker: { color: 'blue' },\n        },\n        {\n          x: [],\n          y: [],\n          type: 'scatter',\n          mode: 'lines+points',\n          marker: { color: 'red' },\n        },\n      ],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { time, data1, data2, title } = nextProps;\n    let newData = [...this.state.data];\n\n    newData[0].x = time;\n    newData[0].y = data1;\n\n    newData[1].x = time;\n    newData[1].y = data2;\n\n    const newLayout = Object.assign({}, this.state.layout);\n    newLayout.title = title;\n    newLayout.datarevision++;\n    // TODO: handle integer overflow\n\n    this.setState({ layout: newLayout });\n  }\n\n  render() {\n    const { layout, data } = this.state;\n    const { displayModeBar } = this.props;\n    return (\n      <Plot\n        layout={layout}\n        data={data}\n        config={{ displayModeBar }}\n        useResizeHandler={true}\n        style={{ width: '100%', height: '100%' }}\n      />\n    );\n  }\n}\n\nexport default CustomPlot;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Plot from './components/customPlot';\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport Paper from '@material-ui/core/Paper';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Slider from '@material-ui/lab/Slider';\nimport Theme from './theme';\n\nconst defaultState = {\n  title: '',\n  data1: [],\n  data2: [],\n  time: [],\n  total: 0,\n  isRunning: false,\n  speedSliderValue: 50, // can be between [0, 100] (both included)\n  displayModeBar: true,\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = defaultState;\n  }\n\n  componentDidMount() {\n    const { isRunning, speedSliderValue } = this.state;\n    if (isRunning) {\n      this.interval = setInterval(\n        () => this.tick(),\n        this.calculateSpeed(speedSliderValue),\n      );\n    }\n  }\n\n  getNewRandomPoint() {\n    let tailCounter = 0;\n    for (let i = 0; i < 100; i++) {\n      const tailOrHead = Math.floor(Math.random() * 2);\n      if (tailOrHead === 0) {\n        tailCounter++;\n      }\n    }\n    return tailCounter;\n  }\n\n  tick = () => {\n    const { time, data1, data2, total } = this.state;\n    const newRandomPoint = this.getNewRandomPoint();\n    const newData1 = [...data1];\n    const newData2 = [...data2];\n    const newTime = [...time];\n\n    newTime.push(newTime.length + 1);\n    newData1.push(50);\n    newData2.push((total + newRandomPoint) / newTime.length);\n\n    this.setState({\n      time: newTime,\n      data1: newData1,\n      data2: newData2,\n      total: total + newRandomPoint,\n    });\n  };\n\n  handleToolSwitch = () => {\n    this.setState({ displayModeBar: !this.state.displayModeBar });\n  };\n\n  handlePlayPause = () => {\n    const { isRunning, speedSliderValue } = this.state;\n    if (isRunning) {\n      clearInterval(this.interval);\n    } else {\n      this.interval = setInterval(\n        () => this.tick(),\n        this.calculateSpeed(speedSliderValue),\n      );\n    }\n    this.setState({ isRunning: !isRunning });\n  };\n\n  handleSpeedSliderChange = (event, value) => {\n    const { isRunning } = this.state;\n    this.setState({ speedSliderValue: value });\n    if (isRunning) {\n      clearInterval(this.interval);\n      this.interval = setInterval(\n        () => this.tick(),\n        this.calculateSpeed(value),\n      );\n    }\n  };\n\n  calculateSpeed = speedSliderValue => {\n    return speedSliderValue === 0 ? 500 : 5000 / speedSliderValue;\n  };\n\n  refresh = () => {\n    clearInterval(this.interval);\n    this.setState(defaultState);\n  };\n\n  render() {\n    const {\n      title,\n      data1,\n      data2,\n      time,\n      isRunning,\n      speedSliderValue,\n      displayModeBar,\n    } = this.state;\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={Theme}>\n        <Paper className={classes.intro} elevation={1}>\n          <Typography variant=\"h5\" component=\"h5\">\n            Experiment about \"Law of Large Numbers\"\n          </Typography>\n        </Paper>\n        <Paper className={classes.plot} elevation={1}>\n          <Plot\n            title={title}\n            time={time}\n            data1={data1}\n            data2={data2}\n            displayModeBar={displayModeBar}\n          />\n        </Paper>\n        <Paper className={classes.settingsPanel} elevation={1}>\n          <Paper className={classes.controlPanel} elevation={0}>\n            <IconButton color=\"primary\" onClick={this.handlePlayPause}>\n              {isRunning ? <PauseIcon /> : <PlayIcon />}\n            </IconButton>\n            <IconButton color=\"primary\" onClick={this.refresh}>\n              <RefreshIcon />\n            </IconButton>\n          </Paper>\n          <Paper className={classes.advancedControlPanel} elevation={0}>\n            <Paper className={classes.row} elevation={0}>\n              <Typography style={{ marginRight: 20 }} component=\"p\">\n                Speed\n              </Typography>\n              <Slider\n                value={speedSliderValue}\n                onChange={this.handleSpeedSliderChange}\n              />\n            </Paper>\n            <Paper className={classes.row} elevation={0}>\n              <Typography style={{ marginRight: 20 }} component=\"p\">\n                Plot controls\n              </Typography>\n              <Switch\n                color=\"primary\"\n                checked={displayModeBar}\n                onChange={this.handleToolSwitch}\n              />\n            </Paper>\n          </Paper>\n        </Paper>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst styles = theme => ({\n  intro: {\n    ...theme.mixins.gutters(),\n    margin: theme.spacing.unit * 2,\n    padding: theme.spacing.unit * 2,\n  },\n  plot: {\n    ...theme.mixins.gutters(),\n    margin: theme.spacing.unit * 2,\n    padding: theme.spacing.unit * 2,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  settingsPanel: {\n    ...theme.mixins.gutters(),\n    margin: theme.spacing.unit * 2,\n    padding: theme.spacing.unit * 2,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  controlPanel: {\n    marginBottom: theme.spacing.unit * 2,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '50%',\n  },\n  advancedControlPanel: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'left',\n    width: '50%',\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}